# Generated by Django 2.1.4 on 2019-03-08 13:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GoogleMapAPIKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
            ],
            options={
                'db_table': 'google_keys',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HarshBehaviourEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('harsh_type', models.CharField(blank=True, max_length=100, null=True)),
                ('record_date', models.DateField(null=True)),
                ('record_time', models.TimeField(null=True)),
                ('customer_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'harsh_behaviour_events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NoticationSender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=50)),
                ('android', models.CharField(blank=True, max_length=200, null=True)),
                ('ios', models.CharField(blank=True, max_length=200, null=True)),
                ('website', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'notification_sender',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Odometere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('distance', models.FloatField(null=True)),
                ('record_date', models.DateField(auto_now_add=True)),
                ('record_date_timezone', models.DateField(null=True)),
                ('customer_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'odometere',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SettingsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('trip_notification', models.BooleanField(default=False)),
                ('trip_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('trip_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('engine_notification', models.BooleanField(default=True)),
                ('engine_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('engine_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('speed_limit', models.FloatField(null=True)),
                ('speed_notification', models.BooleanField(default=False)),
                ('speed_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('speed_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('zone_alert_notification', models.BooleanField(default=False)),
                ('zone_alert_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('zone_alert_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('harshbraking_notification', models.BooleanField(default=False)),
                ('harshbraking_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('harshbraking_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('harshturning_notification', models.BooleanField(default=False)),
                ('harshturning_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('harshturning_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('harshacceleration_notification', models.BooleanField(default=False)),
                ('harshacceleration_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('harshacceleration_sms', models.CharField(blank=True, max_length=15, null=True)),
                ('trip_end_timer', models.IntegerField(default=3)),
                ('device_name', models.CharField(max_length=100)),
                ('customer_id', models.CharField(blank=True, max_length=50, null=True)),
                ('vehicle_type', models.CharField(default='car', max_length=50)),
                ('vehicle_color', models.CharField(default='grey1', max_length=50)),
                ('show_speed', models.BooleanField(default=True)),
                ('show_engine_rpm', models.BooleanField(default=True)),
                ('show_mileage', models.BooleanField(default=True)),
                ('show_fuel_consumption', models.BooleanField(default=True)),
                ('show_engine_temp', models.BooleanField(default=True)),
                ('show_voltage', models.BooleanField(default=True)),
                ('show_engine_load', models.BooleanField(default=True)),
                ('show_throttle_position', models.BooleanField(default=True)),
                ('show_location', models.BooleanField(default=True)),
                ('show_fuel_level', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_id', models.BigIntegerField(null=True)),
                ('customer_id', models.BigIntegerField(null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=40, null=True)),
                ('subscription_status', models.CharField(blank=True, max_length=100, null=True)),
                ('imei_no', models.CharField(blank=True, max_length=25, null=True)),
                ('device_name', models.CharField(blank=True, max_length=40, null=True)),
                ('device_model', models.CharField(blank=True, max_length=50, null=True)),
                ('imei_iccid', models.CharField(blank=True, max_length=100, null=True)),
                ('sim_status', models.BooleanField(default=False, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=40, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('firstBillingDate', models.DateField(null=True)),
                ('nextBillingDate', models.DateField(null=True)),
                ('order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('activated_plan_id', models.CharField(blank=True, max_length=50, null=True)),
                ('activated_plan_description', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device_in_use', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'subscription',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TripCalculationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('_details', models.TextField(blank=True, db_column='details', null=True)),
            ],
            options={
                'db_table': 'trip_calculation_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TripEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=12)),
                ('location', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('record_date', models.DateField(null=True)),
                ('customer_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'trip_events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VoltageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20)),
                ('min_voltage', models.FloatField(null=True)),
                ('max_voltage', models.FloatField(null=True)),
                ('avg_voltage', models.FloatField(null=True)),
                ('record_date', models.DateField(null=True)),
                ('customer_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'voltage',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ZoneAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_id', models.CharField(max_length=50)),
                ('email_one', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_one', models.CharField(blank=True, max_length=15, null=True)),
                ('email_two', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_two', models.CharField(blank=True, max_length=15, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('imei', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'zone_alert',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ZoneGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_by', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'zone_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Zones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('coordinates', models.TextField()),
                ('type', models.CharField(max_length=20)),
                ('customer_id', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('coordinates_tuple', models.TextField(blank=True, null=True)),
                ('zone_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zone_group', to='app.ZoneGroup')),
            ],
            options={
                'db_table': 'zones',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='zonegroup',
            index=models.Index(fields=['created_by', 'created_on', 'name'], name='zone_group_created_7643f2_idx'),
        ),
        migrations.AddField(
            model_name='zonealert',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zone_alert', to='app.Zones'),
        ),
        migrations.AddIndex(
            model_name='voltagemodel',
            index=models.Index(fields=['imei', 'record_date', 'min_voltage', 'max_voltage', 'customer_id'], name='voltage_imei_6d6627_idx'),
        ),
        migrations.AddIndex(
            model_name='tripevents',
            index=models.Index(fields=['imei', 'type', 'date', 'time', 'record_date', 'customer_id'], name='trip_events_imei_d6d16f_idx'),
        ),
        migrations.AddIndex(
            model_name='tripcalculationdata',
            index=models.Index(fields=['imei'], name='trip_calcul_imei_118346_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['imei_no', 'customer_id', 'activated_plan_id', 'is_active', 'device_in_use'], name='subscriptio_imei_no_8afd09_idx'),
        ),
        migrations.AddIndex(
            model_name='settingsmodel',
            index=models.Index(fields=['imei', 'customer_id'], name='settings_imei_87e113_idx'),
        ),
        migrations.AddIndex(
            model_name='odometere',
            index=models.Index(fields=['imei', 'record_date_timezone', 'record_date', 'customer_id'], name='odometere_imei_be3d89_idx'),
        ),
        migrations.AddIndex(
            model_name='noticationsender',
            index=models.Index(fields=['customer_id'], name='notificatio_custome_29b863_idx'),
        ),
        migrations.AddIndex(
            model_name='harshbehaviourevent',
            index=models.Index(fields=['imei', 'record_date', 'record_time', 'customer_id'], name='harsh_behav_imei_7cb3be_idx'),
        ),
        migrations.AddIndex(
            model_name='zones',
            index=models.Index(fields=['customer_id', 'created_on'], name='zones_custome_421f02_idx'),
        ),
        migrations.AddIndex(
            model_name='zonealert',
            index=models.Index(fields=['customer_id', 'created_on', 'name', 'zone', 'imei'], name='zone_alert_custome_3f3aa6_idx'),
        ),
    ]
